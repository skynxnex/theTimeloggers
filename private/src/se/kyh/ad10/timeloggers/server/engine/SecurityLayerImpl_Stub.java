// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package se.kyh.ad10.timeloggers.server.engine;

public final class SecurityLayerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements se.kyh.ad10.timeloggersPublic.server.SecurityLayer
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_createSession_0;
    private static java.lang.reflect.Method $method_getPublicInterface_1;
    
    static {
	try {
	    $method_createSession_0 = se.kyh.ad10.timeloggersPublic.server.SecurityLayer.class.getMethod("createSession", new java.lang.Class[] {});
	    $method_getPublicInterface_1 = se.kyh.ad10.timeloggersPublic.server.SecurityLayer.class.getMethod("getPublicInterface", new java.lang.Class[] {java.util.UUID.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public SecurityLayerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of createSession()
    public java.util.UUID createSession()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_createSession_0, null, -6097550621277040209L);
	    return ((java.util.UUID) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getPublicInterface(UUID)
    public se.kyh.ad10.timeloggersPublic.server.PublicInterface getPublicInterface(java.util.UUID $param_UUID_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getPublicInterface_1, new java.lang.Object[] {$param_UUID_1}, -334880199919191097L);
	    return ((se.kyh.ad10.timeloggersPublic.server.PublicInterface) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
